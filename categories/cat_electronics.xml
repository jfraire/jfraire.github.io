<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>La séptima vida (Posts about electronics)</title><link>https://jfraire.github.io/</link><description></description><atom:link href="https://jfraire.github.io/categories/cat_electronics.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:julio.fraire@gmail.com"&gt;Julio Fraire&lt;/a&gt; </copyright><lastBuildDate>Tue, 28 Dec 2021 18:39:52 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>A tiny phenakistiscope</title><link>https://jfraire.github.io/posts/a-tiny-phenakistiscope/</link><dc:creator>Julio Fraire</dc:creator><description>&lt;div&gt;&lt;p&gt;The phenakistiscope is a rotating disk that produces short animations. It was invented in the 19th century, and the disks from that time are really beautiful. The animations they create are intriguing. In this &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;series&lt;/a&gt; we look at a few of the ideas that result in these captivating works of art.&lt;/p&gt;
&lt;section id="a-different-kind-of-charm"&gt;
&lt;h2&gt;A different kind of charm&lt;/h2&gt;
&lt;p&gt;I know. The XIX century animations are charming. Seeing the rotating disks through their slits, in front of a mirror, would transport you to another world, another ambiance of high hats, beautiful dresses, spectacles… a refined atmosphere. And I am about to break all this by talking about servo-motors, LEDs and micro-controllers.&lt;/p&gt;
&lt;p&gt;But bear with me. We are talking about a little ATtiny85 micro-controller. Only 8 terminals in a sweet thru-hole package. This tiny fellow can use a continuous-rotation servo-motor, some potentiometers, and a bunch of LEDs to replace the slits and the mirror. And the best part, it will let you see the animations at the same time as your kids.&lt;/p&gt;
&lt;p&gt;The idea is simple: The servo-motor spins the disk while the LEDs blink. The disk will advance a certain angle between two LED flashes. If this angle coincides with the design of the disk, the animation will come to life!&lt;/p&gt;
&lt;p&gt;And this is where the two potentiometers come in: One of them will let you change the speed of the servo-motor. The other potentiometer will change the time between the flashes of the LEDs.&lt;/p&gt;
&lt;img alt="The phenakistiscope assembled in a tea can" src="https://jfraire.github.io/images/phenakistiscope.jpg" style="width: 350px; height: 284px;"&gt;
&lt;/section&gt;
&lt;section id="a-brief-description-of-the-program-and-the-circuit"&gt;
&lt;h2&gt;A brief description of the program and the circuit&lt;/h2&gt;
&lt;p&gt;The ATtiny85 is a nice piece of micro-controller. The program configures a timer to produce the PWM signal  for the servo-motor, another timer for the LEDs, and the ADC to read the two potentiometers. Then, it uses the readings of the potentiometers to change the limits of the timers. And that’s it!&lt;/p&gt;
&lt;p&gt;You can see the listing of the program below. It has more comments than code because the actual code is… cryptic. You should check the &lt;a class="reference external" href="https://www.microchip.com/en-us/product/ATtiny85"&gt;datasheet&lt;/a&gt; to make sense of it. It is almost pure configuration. The only logic is there to copy the potentiometer readings to the timers.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://jfraire.github.io/listings/phenakistiscope_attiny.c.html"&gt;phenakistiscope_attiny.c&lt;/a&gt;  &lt;a class="reference external" href="https://jfraire.github.io/listings/phenakistiscope_attiny.c"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code c"&gt;&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-1" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-1"&gt;&lt;/a&gt;&lt;span class="cm"&gt;/* -----------------------------------------------&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-2" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-2"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   Program that controls the period of a PWM&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-3" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-3"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   signal with a potentiometer, while it moves a&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-4" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-4"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   servo motor at a constant speed.&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-5" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-5"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   It uses timer 0, 1, and the ADC&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-6" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-6"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   Works with ATTiny85&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-7" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-7"&gt;&lt;/a&gt;&lt;span class="cm"&gt;   ----------------------------------------------- */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-8" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-8"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;avr/io.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-9" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-9"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;avr/interrupt.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-10" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-10"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;util/delay.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-11" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-11"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-12" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-12"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#define LED PB1&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-13" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-13"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#define SERVO PB4&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-14" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-14"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#define POT1 ADC1&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-15" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-15"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#define POT2 ADC3&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-16" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-16"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-17" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-17"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bright_time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-18" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-18"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-19" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-19"&gt;&lt;/a&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;read_adc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-20" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-20"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ADMUX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mh"&gt;0xF0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="c1"&gt;// Clear the channel selection&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-21" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-21"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ADMUX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                       &lt;/span&gt;&lt;span class="c1"&gt;// Read from ADCX&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-22" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-22"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ADCSRA&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ADSC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="c1"&gt;// Start conversion&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-23" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-23"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop_until_bit_is_clear&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ADCSRA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ADSC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-24" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-24"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ADCH&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-25" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-25"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-26" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-26"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-27" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-27"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-28" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-28"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Set LED and SERVO pins for output&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-29" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-29"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;DDRB&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SERVO&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LED&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-30" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-30"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-31" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-31"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Initialize the ADC -- Use VCC as reference&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-32" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-32"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ADMUX&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                              &lt;/span&gt;&lt;span class="c1"&gt;// Clear REFS0-2 select VCC as ref&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-33" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-33"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ADMUX&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ADLAR&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;                 &lt;/span&gt;&lt;span class="c1"&gt;// Use the most significant 8 bits&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-34" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-34"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ADCSRA&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ADPS1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ADPS0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// Set prescaler to 1/8&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-35" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-35"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ADCSRA&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ADEN&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="c1"&gt;// Enable ADC&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-36" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-36"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-37" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-37"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// This is the timer for the LEDs&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-38" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-38"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Configure timer 0 in fast PWM mode with variable period&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-39" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-39"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// The period is modified by chaning OCR0A, and the signal&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-40" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-40"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// turns off on OCR0B&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-41" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-41"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// So, output is at OC0B, PB1&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-42" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-42"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TCCR0A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;WGM01&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;WGM00&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;// Fast PWM mode reseting at OCR0A&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-43" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-43"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TCCR0B&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;WGM02&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="c1"&gt;// (mode 7)&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-44" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-44"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TCCR0A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;COM0B1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="c1"&gt;// Non-inverting output on OC0B (PB1)&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-45" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-45"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TCCR0B&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CS02&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CS00&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// Set the prescaler to 1/1024&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-46" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-46"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;OCR0B&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bright_time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                  &lt;/span&gt;&lt;span class="c1"&gt;// Time to keep the output high&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-47" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-47"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-48" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-48"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// And this is for the servo motor&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-49" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-49"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Configure timer 1 in PWM mode. Output is PB4 (OC1B)&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-50" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-50"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// The ON period should last between 900 and 2100 us --&amp;gt; 1200 us&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-51" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-51"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// And the frequency of the signal should be between 50 and 100 Hz&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-52" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-52"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// Because it is an 8-bit timer, its period is divided by 256, maximum&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-53" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-53"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// A prescaler of 64 will give a period of 16.4 ms with a resolution of&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-54" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-54"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// 64 us&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-55" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-55"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// The 1200 us can be divided into only 18.75 bins...&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-56" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-56"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;GTCCR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PWM1B&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// Enable PWM mode on OCR1A&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-57" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-57"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;GTCCR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;COM1B1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;// OC1A turns on at 0, resets at OCR1C&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-58" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-58"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TCCR1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CS12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CS11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;CS10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-59" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-59"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;OCR1C&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mh"&gt;0xFF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="c1"&gt;// Pulse duration of 256 * 64 us, or 16.38 ms&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-60" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-60"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-61" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-61"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;// ------ Event loop ------ //&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-62" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-62"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-63" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-63"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// Read the 1st potentiometer and change the period of the PWM&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-64" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-64"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// signal for the LED in timer 0&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-65" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-65"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;OCR0A&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;read_adc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-66" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-66"&gt;&lt;/a&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-67" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-67"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// Read the 2nd potentiometer and change the high duration of the PWM&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-68" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-68"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// signal for the servo motor in timer 1&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-69" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-69"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// The 0-255 signal should be mapped to 0-18.75&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-70" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-70"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;// The minimum pulse is 900 us, or 14 clock ticks of 64 us&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-71" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-71"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;speed_servo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;read_adc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-72" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-72"&gt;&lt;/a&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;OCR1B&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;uint8_t&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="mf"&gt;18.75&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;speed_servo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;255.0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;14.06&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-73" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-73"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-74" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-74"&gt;&lt;/a&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;a id="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-75" name="rest_code_e8bd2d7e6f6f4c4580a75f753cf3c280-75"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;In terms of the circuit, the micro-controller doesn’t require much. The circuit has just a voltage regulator, and terminals for the potentiometers, servo-motor, and LEDs. Only one pin is used for the LEDs. I should have put a transistor instead.&lt;/p&gt;
&lt;p&gt;I put everything in a repository, in GitHub. Even the Gerber files.&lt;/p&gt;
&lt;img alt="The phenakistiscope circuit assembled in a tea can" src="https://jfraire.github.io/images/open_phenakistiscope.jpg" style="width: 250px; height: 444px;"&gt;
&lt;/section&gt;
&lt;section id="my-own-animated-disk"&gt;
&lt;h2&gt;My own animated disk!&lt;/h2&gt;
&lt;p&gt;And this is my first animated disk. The pleasure to see it animated is unbelievable. It lacks the charm of the XIX century but has a reminiscence of aliens and cows.&lt;/p&gt;
&lt;img alt="An animated disk of aliens abducting cows" src="https://jfraire.github.io/images/cow_abduction.gif" style="width: 400px; height: 395px;"&gt;
&lt;p&gt;And here it is, the real thing:&lt;/p&gt;
&lt;div class="youtube-video"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/Ikgw9VhqUUA?rel=0&amp;amp;wmode=transparent" frameborder="0" allow="encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/section&gt;
&lt;section id="about-this-series"&gt;
&lt;h2&gt;About this series&lt;/h2&gt;
&lt;p&gt;This is the fifth and last article about the phenakistiscope. In this short series, I describe some of the ideas used to animate the disks. The first article is &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;</description><category>phenakistiscope</category><guid>https://jfraire.github.io/posts/a-tiny-phenakistiscope/</guid><pubDate>Mon, 27 Dec 2021 23:15:01 GMT</pubDate></item><item><title>Playing with spirals</title><link>https://jfraire.github.io/posts/playing-with-spirals/</link><dc:creator>Julio Fraire</dc:creator><description>&lt;div&gt;&lt;p&gt;The phenakistiscope is a rotating disk that produces short animations. It was invented in the 19th century, and the disks from that time are really beautiful. The animations they create are intriguing. In this &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;series&lt;/a&gt; we look at a few of the ideas that result in these captivating works of art.&lt;/p&gt;
&lt;section id="spirals-and-more-spirals"&gt;
&lt;h2&gt;Spirals and more spirals!&lt;/h2&gt;
&lt;p&gt;In the &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;first article&lt;/a&gt; of the series, we saw how a spiral forms a radial movement when animated in a phenakistiscope. Actually, the polar equation of a spiral that starts in the center of the disk looks very similar to that of a line in Cartesian coordinates: &lt;span class="math"&gt;\(r = m \theta\)&lt;/span&gt;. It simply says that the radius changes in proportion to the rotation angle.&lt;/p&gt;
&lt;p&gt;So, if we put stuff in such a spiral, it will move along radial lines. Now, if the radius increments slowly for each change in angle, the spiral can last for several complete turns before it reaches the brim of the disk. In the disk below, the spiral completes at least 7 turns of 20 frames each. The visual effect is stunning:&lt;/p&gt;
&lt;img alt="Disk with colorful circles ordered along a spiral" src="https://jfraire.github.io/images/circles-spiral.png" style="width: 300px; height: 300px;"&gt;
&lt;img alt="Animated disk with colorful circles ordered along a spiral" src="https://jfraire.github.io/images/circles-spiral.gif" style="width: 300px; height: 300px;"&gt;
&lt;p&gt;The same idea is at work in the next, beautiful disk:&lt;/p&gt;
&lt;img alt="Animated disk of monsters" src="https://jfraire.github.io/images/phena_greendemons_small.gif" style="width: 300px; height: 300px;"&gt;
&lt;/section&gt;
&lt;section id="an-homage-to-joseph-plateau-the-inventor-of-the-phenakistiscope"&gt;
&lt;h2&gt;An homage to Joseph Plateau, the inventor of the phenakistiscope&lt;/h2&gt;
&lt;p&gt;Google produced a set of &lt;em&gt;doodles&lt;/em&gt; to celebrate Joseph Plateau and his early animations. I find the disk below very interesting. It combines two movements: The frying pan is moving up and down because its frames are drawn along a circle. But the pancake in the animation seems to move in a parabolic trajectory as dictated by the laws of physics. Note how it does not move in a circle, nor in a spiral! Also, the pancake is not moving from the center, but from the brim of the disk.&lt;/p&gt;
&lt;img alt="Disk drawn by Google in homage of Joseph Plateau" src="https://jfraire.github.io/images/plateau-google.png" style="width: 223px; height: 225px;"&gt;
&lt;img alt="Disk drawn by Google in homage of Joseph Plateau, animated" src="https://jfraire.github.io/images/plateau-google.gif" style="width: 223px; height: 225px;"&gt;
&lt;/section&gt;
&lt;section id="about-this-series"&gt;
&lt;h2&gt;About this series&lt;/h2&gt;
&lt;p&gt;This is the fourth article about the phenakistiscope. In this short series, I describe some of the ideas used to animate the disks. The first article is &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://jfraire.github.io/posts/a-tiny-phenakistiscope"&gt;next article&lt;/a&gt; will discuss a little machine to animate cardboard disks!&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;</description><category>phenakistiscope</category><guid>https://jfraire.github.io/posts/playing-with-spirals/</guid><pubDate>Wed, 22 Dec 2021 21:48:15 GMT</pubDate></item><item><title>A balancing monkey and a jumping zebra</title><link>https://jfraire.github.io/posts/a-balancing-monkey-and-a-jumping-zebra/</link><dc:creator>Julio Fraire</dc:creator><description>&lt;div&gt;&lt;p&gt;The phenakistiscope is a rotating disk that produces short animations. It was invented in the 19th century, and the disks from that time are really beautiful. The animations they create are intriguing. In this &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;series&lt;/a&gt; we look at a few of the ideas that result in these captivating works of art.&lt;/p&gt;
&lt;section id="a-disk-with-many-elements"&gt;
&lt;h2&gt;A disk with many elements&lt;/h2&gt;
&lt;p&gt;Up and down movement can remind us of the sun and the moon, of birds flying, of sea waves… or of monkeys and zebras! Take a look at this nice animation. Several things are going on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Some hoops are turning in-place, close to the center of the disk&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A red ball moves around the disk and goes through the turning hoops&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A monkey swings from branch to branch, close to the border of the disk&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A zebra jumps through two trees at the center of the disk&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;img alt="Animated disk of monkeys and zebras moving up and down" src="https://jfraire.github.io/images/monkeys_and_zebras.gif" style="width: 300px; height: 300px;"&gt;
&lt;p&gt;The first two elements of the animation are described &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;in the first article of the series&lt;/a&gt;. The hoops are stationary because there are as many hoops as slits in the disk, and the number of slits determines the fixed angle between animation frames.&lt;/p&gt;
&lt;p&gt;The red ball is moving through the hoops because there are less ball images than slits. So, the angle between the balls is &lt;em&gt;larger&lt;/em&gt; than the angle that the disk rotates at every frame, and therefore, the balls do not arrive to their previous position. They move forward (or backwards!)&lt;/p&gt;
&lt;p&gt;But the monkey and the zebras? Well, they &lt;em&gt;also&lt;/em&gt; move forward. There are less images of the monkey and the zebra than slits in the disk. But that is not all: They move up and down! And this is very interesting.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="moving-objects-up-and-down"&gt;
&lt;h2&gt;Moving objects up and down&lt;/h2&gt;
&lt;p&gt;To draw the up and down movement you can do like before, with the radial lines: You draw the first image, you turn the disk, draw the next one a little higher, repeat, eventually you start drawing a little bit lower, you reach the bottom, and then you draw higher again.&lt;/p&gt;
&lt;p&gt;Let’s see that with more detail. You start with the disk at 0° and put your first zebra. The disk turns 30° and the zebra goes up a little. The disk turns again, to 60°, and the zebra keeps going up. The zebra reaches the top at 90°. At 120°, it is now going down. When it reaches 180°, the zebra is at the same distance from the center as the initial drawing. It continues to go down until 270°, when it hits the bottom, and starts to go back up until the last image. This description looks like a sinusoidal curve! And have you guessed what is the shape actually drawn in the disk? It is a circle!&lt;/p&gt;
&lt;img alt="Disk of a monkey and a zebra and other elements" src="https://jfraire.github.io/images/monkeys_and_zebras.png" style="width: 300px; height: 300px;"&gt;
&lt;img alt="Fitting images in circles results in up and down movement" src="https://jfraire.github.io/images/monkeys_and_zebras_circles.png" style="width: 300px; height: 300px;"&gt;
&lt;/section&gt;
&lt;section id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Fitting images in circles results in up and down movement when the disk rotates! Another conclusion? This is an interesting way of thinking about sinusoidal waves!&lt;/p&gt;
&lt;p&gt;So far, we have discussed two movements: Tangential and radial. &lt;a class="reference external" href="https://jfraire.github.io/posts/playing-with-spirals"&gt;In the next article&lt;/a&gt; we will talk about objects that move “up and down”.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="about-this-series"&gt;
&lt;h2&gt;About this series&lt;/h2&gt;
&lt;p&gt;This is the third article about the phenakistiscope. In this short series, I describe some of the ideas used to animate the disks. The first article is &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The image used above can be found in &lt;a class="reference external" href="http://loc.gov/pictures/resource/cph.3g08091/"&gt;the library of congress of the United States&lt;/a&gt; and it is in the public domain.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;</description><category>phenakistiscope</category><guid>https://jfraire.github.io/posts/a-balancing-monkey-and-a-jumping-zebra/</guid><pubDate>Thu, 16 Dec 2021 22:41:47 GMT</pubDate></item><item><title>Animating radial movements</title><link>https://jfraire.github.io/posts/animating-radial-movements/</link><dc:creator>Julio Fraire</dc:creator><description>&lt;div&gt;&lt;p&gt;In the &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;first article of this series&lt;/a&gt; we discussed about the phenakistiscope, a rotating disk that produces short animations. In that post we saw a running horse and how it was made to move forward by having less frames than disk stops. Movement was &lt;em&gt;tangential&lt;/em&gt;. In this article, we will talk about &lt;em&gt;radial&lt;/em&gt; movements.&lt;/p&gt;
&lt;section id="animating-radial-movements"&gt;
&lt;h2&gt;Animating radial movements&lt;/h2&gt;
&lt;p&gt;To make a feature move in a straight line, start by placing the first frame in the disk. For example, close to the border. Turn the disk by the angle of the animation (30° for 12 frames, for example) and draw the next frame &lt;em&gt;along the line you want to trace&lt;/em&gt;. Continue until you have all the frames you want. At the end of this exercise, you will have a spiral!&lt;/p&gt;
&lt;p&gt;This disk from 1833 shows a man feeding a frog with some red balls. The balls are drawn along a spiral, but in the animation, you will see them falling along a radial straight line.&lt;/p&gt;
&lt;img alt="Disk from 1833 that is animated when spun" src="https://jfraire.github.io/images/frogs_feeding.png" style="width: 300px; height: 300px;"&gt;
&lt;img alt="Animated disk of red balls moving along straight lines" src="https://jfraire.github.io/images/frogs_feeding.gif" style="width: 300px; height: 300px;"&gt;
&lt;p&gt;So far, we have discussed two movements: Tangential and radial. &lt;a class="reference external" href="https://jfraire.github.io/posts/a-balancing-monkey-and-a-jumping-zebra"&gt;In the next article&lt;/a&gt; we will talk about objects that move “up and down”, radially.&lt;/p&gt;
&lt;/section&gt;
&lt;section id="about-this-series"&gt;
&lt;h2&gt;About this series&lt;/h2&gt;
&lt;p&gt;This is the second article about the phenakistiscope. In this short series, I describe some of the ideas used to animate the disks. The first article is &lt;a class="reference external" href="https://jfraire.github.io/posts/phenakistiscope"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The image used above can be found in &lt;a class="reference external" href="http://loc.gov/pictures/resource/cph.3g08091/"&gt;the library of congress of the United States&lt;/a&gt; and it is in the public domain.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;</description><category>phenakistiscope</category><guid>https://jfraire.github.io/posts/animating-radial-movements/</guid><pubDate>Wed, 15 Dec 2021 21:55:14 GMT</pubDate></item><item><title>Phenakistiscope: An early animation toy</title><link>https://jfraire.github.io/posts/phenakistiscope/</link><dc:creator>Julio Fraire</dc:creator><description>&lt;div&gt;&lt;p&gt;Back on the 1830's, scientists were intrigued by the optical illusions created by rotating wheels. Imagine ingenious cardboard devices that, when spun in front of a mirror, created the illusion of movement. These are among the grand-parents of cinema and animated GIFs!&lt;/p&gt;
&lt;p&gt;Soon, paper toys were sold all around the globe with gorgeous, short animations. The user would look into a mirror through slits in a rotating cardboard disk. If the disk were held still, viewing the image reflection through a single slit would freeze it at a particular angle; viewing it through each slit in sequence would then create the illusion of movement. The beautiful images would burst into life.&lt;/p&gt;
&lt;p&gt;It is easy nowadays to find beautiful disks for this kind of wonderful animations. You can indeed print them, glue them on cardboard, cut the slits open and spin them in front of a mirror. Or, you can animate them into a GIF file. Even better, you can animate them with a small motor and stroboscopic lights!&lt;/p&gt;
&lt;p&gt;But let's not run ahead ourselves, and let's talk about the disks first.&lt;/p&gt;
&lt;section id="beautiful-disks-and-how-they-work"&gt;
&lt;h2&gt;Beautiful disks (and how they work)&lt;/h2&gt;
&lt;p&gt;Consider this disk from 1893. It shows a running horse. Let's make an experiment in our minds: Imagine that your eyes are closed and that you open them briefly and see the disk. Now, using your imagination, rotate the disk by 1/12th of a turn and open your eyes for another brief moment. You would find that the &lt;em&gt;next&lt;/em&gt; frame of the running horse has replaced the original. The horse is still at the same place, but its pose changed slightly. Repeat many times. Now you can see the animation with the eyes of your imagination! (but you can still cheat and see the image below).&lt;/p&gt;
&lt;img alt="Disk from 1893 that is animated when spun" src="https://jfraire.github.io/images/running_horse.png" style="width: 300px; height: 301px;"&gt;
&lt;img alt="Disk animated by 1/12th of a turn" src="https://jfraire.github.io/images/running_horse.gif" style="width: 300px; height: 301px;"&gt;
&lt;p&gt;So, there are 12 frames drawn in the disk, spaced at equal angles of 30°. If the disk rotates by 30° each time we get a glimpse, we will effectively see the next frame in place of the current one. Do this many times and you get an animation.&lt;/p&gt;
&lt;p&gt;However, note that the disk has 13 slits! They are spaced not every 30°, but every 27,7°! What do you think will happen?&lt;/p&gt;
&lt;p&gt;With your mind, turn the disk by just 1/13th of a turn. Open your eyes, take a brief look, and close them again. Repeat. It is the slits that will remain stationary this time! But what about the horses? Where is the next frame? Well, because we just turned 27,7° instead of 30°, the next horse frame didn't arrive to the same position of the previous frame. It is slightly off, and in this case, slightly advanced. The horse is running faster!
Using a number of frames that is different than the angle of rotation of the disk results in &lt;em&gt;tangential&lt;/em&gt; movement. In cardboard disks like this, the angle of rotation is given by the separation between the slits. It equals 360° divided by the number of slits. The number of frames is the number of horses, in this case.&lt;/p&gt;
&lt;img alt="Disk animated by 1/13th of a turn (horse runs faster!)" class="align-center" src="https://jfraire.github.io/images/horse_13_frames.gif" style="width: 300px; height: 301px;"&gt;
&lt;/section&gt;
&lt;section id="about-this-series"&gt;
&lt;h2&gt;About this series&lt;/h2&gt;
&lt;p&gt;This is the first article about the phenakistiscope. In this short series, I describe some of the ideas used to animate the disks. At the end I will include a post about a circuit that animates the disks using LEDs and a servomotor.&lt;/p&gt;
&lt;p&gt;The image used above can be found in &lt;a class="reference external" href="http://loc.gov/pictures/resource/ppmsca.05947/"&gt;the library of congress of the United States&lt;/a&gt; and it is in the public domain.&lt;/p&gt;
&lt;/section&gt;&lt;/div&gt;</description><category>phenakistiscope</category><guid>https://jfraire.github.io/posts/phenakistiscope/</guid><pubDate>Tue, 07 Dec 2021 22:52:00 GMT</pubDate></item></channel></rss>